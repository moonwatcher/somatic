{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"com",
				"components"
			],
			[
				"cla",
				"classsified"
			],
			[
				"drc",
				"drc_5_image"
			],
			[
				"hole",
				"hole_by_index"
			],
			[
				"class",
				"PartClassification"
			],
			[
				"siz",
				"size"
			],
			[
				"pus",
				"push_back"
			],
			[
				"pix",
				"pixel"
			],
			[
				"di",
				"dimension"
			],
			[
				"dis",
				"distance"
			],
			[
				"is",
				"is_a_join"
			],
			[
				"root",
				"root_components"
			],
			[
				"empl",
				"emplace_back"
			],
			[
				"find",
				"find_root"
			],
			[
				"left",
				"left_root"
			],
			[
				"righ",
				"right_root"
			],
			[
				"compon",
				"component"
			],
			[
				"Pixe",
				"pixels"
			],
			[
				"comp",
				"componenet_index"
			],
			[
				"remo",
				"remote_url"
			],
			[
				"ske",
				"skeletons"
			],
			[
				"obje",
				"object_id"
			],
			[
				"labe",
				"label_nodes"
			],
			[
				"color",
				"ColorPalette"
			],
			[
				"back",
				"background"
			],
			[
				"raw",
				"raw_image"
			],
			[
				"blob",
				"blob_image"
			],
			[
				"ad",
				"adjusted_image"
			],
			[
				"work",
				"work_image"
			],
			[
				"ob",
				"objectId"
			],
			[
				"sk",
				"skeleton"
			],
			[
				"per",
				"perim"
			],
			[
				"hol",
				"hole_index"
			],
			[
				"Lib",
				"LibsvmClassifier"
			],
			[
				"numb",
				"number_of_features"
			],
			[
				"mode",
				"model_path"
			],
			[
				"num",
				"number_of_features"
			],
			[
				"res",
				"resize"
			],
			[
				"fraction",
				"fractional"
			],
			[
				"conf",
				"configuration_url"
			],
			[
				"load",
				"load_url_node"
			],
			[
				"C",
				"Classifier"
			],
			[
				"arg",
				"argv"
			],
			[
				"ar",
				"argc"
			],
			[
				"vers",
				"version_comment"
			],
			[
				"ver",
				"version_comment"
			],
			[
				"Format",
				"FormatType"
			],
			[
				"_",
				"_type"
			],
			[
				"c",
				"current"
			],
			[
				"mul",
				"multiplex_barcode"
			],
			[
				"to",
				"token"
			],
			[
				"url",
				"url_value"
			],
			[
				"fra",
				"fragments"
			],
			[
				"all",
				"allocator"
			],
			[
				"temp",
				"template_transforms"
			],
			[
				"trans",
				"transform"
			],
			[
				"e",
				"empty"
			],
			[
				"tok",
				"tokens"
			],
			[
				"input",
				"input_urls"
			],
			[
				"COMMAN",
				"CommandLineError"
			],
			[
				"pu",
				"push_back"
			],
			[
				"a",
				"append"
			],
			[
				"pixe",
				"pixels"
			],
			[
				"size",
				"size_t"
			],
			[
				"ks",
				"kstring_free"
			],
			[
				"A",
				"Auxiliary"
			],
			[
				"In",
				"InternalError"
			],
			[
				"kpu",
				"kputsn"
			],
			[
				"kput",
				"kputsn"
			],
			[
				"hfi",
				"hfile"
			],
			[
				"pro",
				"probe"
			],
			[
				"dir",
				"direction"
			],
			[
				"Chann",
				"ChannelSpecification"
			],
			[
				"channe",
				"channel"
			],
			[
				"hf",
				"hfile"
			],
			[
				"em",
				"emplace_back"
			],
			[
				"inpu",
				"input_urls"
			],
			[
				"fee",
				"feed_specification_by_url"
			],
			[
				"pis",
				"position"
			],
			[
				"re",
				"recall"
			],
			[
				"analy",
				"analyze_record"
			],
			[
				"load_",
				"load_model"
			],
			[
				"base",
				"base_output_url"
			],
			[
				"dire",
				"direction"
			],
			[
				"erro",
				"errno"
			],
			[
				"wor",
				"working_directory"
			],
			[
				"bas",
				"base_input_url"
			],
			[
				"get",
				"getcwd"
			],
			[
				"_dir",
				"_directory"
			],
			[
				"is_s",
				"is_standard_stream"
			],
			[
				"CA",
				"CANONICAL_STDIN_PATH"
			],
			[
				"_direc",
				"_direction"
			],
			[
				"hts",
				"hts_file"
			],
			[
				"set",
				"set_type"
			],
			[
				"deco",
				"decode_type"
			],
			[
				"l",
				"lhs"
			],
			[
				"path",
				"path_type"
			],
			[
				"pos",
				"position"
			],
			[
				"feed",
				"feed_path"
			],
			[
				"For",
				"FormatKind"
			],
			[
				"Forma",
				"FormatType"
			],
			[
				"for",
				"format"
			],
			[
				"file",
				"filename"
			],
			[
				"rever",
				"reverse_complement"
			],
			[
				"MIN",
				"MIN_YEAST"
			],
			[
				"barc",
				"barcode"
			],
			[
				"ba",
				"barcode"
			],
			[
				"barco",
				"barcodes"
			],
			[
				"site-fo",
				"site-footer-owner"
			],
			[
				"max",
				"max-width"
			],
			[
				"marg",
				"margin-left"
			],
			[
				"border-col",
				"border-color"
			],
			[
				"font",
				"font-weight"
			],
			[
				"font-s",
				"font-size"
			],
			[
				"margi",
				"margin-top"
			],
			[
				"thread",
				"thread_pool"
			],
			[
				"kra",
				"kraken_p"
			],
			[
				"read",
				"read_id"
			],
			[
				"divi",
				"division_id"
			],
			[
				"tax",
				"taxonomy_id"
			],
			[
				"sam",
				"sam_record"
			],
			[
				"Cha",
				"ChannelSpecification"
			],
			[
				"poti",
				"position"
			],
			[
				"bam",
				"bam1_t"
			],
			[
				"tots",
				"total_input_segments"
			],
			[
				"tot",
				"total_output_segments"
			],
			[
				"factor",
				"factory"
			],
			[
				"dec",
				"decrement"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 33.0,
		"last_filter": "Package ",
		"selected_items":
		[
			[
				"Package ",
				"Preferences: Browse Packages"
			],
			[
				"pack",
				"Preferences: Browse Packages"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"unins",
				"Preferences: BioPythonUtils Key Bindings â€“ User"
			],
			[
				"git",
				"Github: Repository"
			],
			[
				"sidebar",
				"View: Toggle Side Bar"
			]
		],
		"width": 529.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"help",
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/lg/code/somatic/contrib/blat",
		"/Users/lg/code/somatic/contrib/igblast",
		"/Users/lg/code/somatic/contrib/igblast/db",
		"/Users/lg/code/somatic/contrib/igblast/db/internal_data",
		"/Users/lg/code/somatic/script"
	],
	"file_history":
	[
		"/Users/lg/code/somatic/somatic.py",
		"/Users/lg/code/somatic/example/setting.json",
		"/Users/lg/code/somatic/notes",
		"/Users/lg/code/somatic/example/core.json",
		"/Users/lg/code/somatic/somatic.sublime-project",
		"/tmp/subl stdin pBO0BP.txt",
		"/Users/lg/code/tubo/environment.py",
		"/Users/lg/Desktop/tiangle.py",
		"/Users/lg/code/devstar/point.h",
		"/Users/lg/code/devstar/context.cpp",
		"/Users/lg/code/devstar/Makefile",
		"/Users/lg/code/devstar/constant.h",
		"/Users/lg/code/devstar/shape.h",
		"/Users/lg/code/devstar/shape.cpp",
		"/Users/lg/code/devstar/constant.cpp",
		"/Users/lg/code/devstar/context.h",
		"/Users/lg/code/devstar/environment.h",
		"/Users/lg/code/devstar/example/gi.json",
		"/Users/lg/Desktop/old.cpp",
		"/Users/lg/code/devstar/image.h",
		"/Users/lg/code/devstar/well.cpp",
		"/Users/lg/code/devstar/contrib/maxflow/graph.h",
		"/Users/lg/code/devstar/error.h",
		"/Users/lg/code/devstar/contrib/cimg/CImg.h",
		"/Users/lg/code/devstar/classify.h",
		"/Users/lg/code/devstar/interface.h",
		"/Users/lg/code/devstar/devstar",
		"/Users/lg/code/devstar/image.cpp",
		"/Users/lg/code/devstar/interface.json",
		"/Users/lg/code/tubo/command.py",
		"/Users/lg/code/tubo/error.py",
		"/Users/lg/code/tubo/interface.py",
		"/Users/lg/.ssh/config",
		"/Users/lg/code/pheniqs/build.py",
		"/Users/lg/code/pheniqs/build.sh",
		"/Users/lg/Desktop/megacli_PDList_aALL",
		"/Users/lg/Desktop/megacli_PDList_aALL_pleiades",
		"/Users/lg/code/devstar/well.h",
		"/Users/lg/code/devstar/pipeline.cpp",
		"/Users/lg/code/devstar/url.h",
		"/Users/lg/code/devstar/url.cpp",
		"/Users/lg/code/devstar/environment.cpp",
		"/Users/lg/code/devstar/devstar.cpp",
		"/Users/lg/code/devstar/example/default.json",
		"/Users/lg/code/devstar/classify.cpp",
		"/Users/lg/Desktop/opkg.txt",
		"/Users/lg/code/devstar/legacy/src/skeleton.cpp",
		"/Users/lg/code/pheniqs/environment.cpp",
		"/Users/lg/Desktop/map",
		"/Users/lg/code/devstar/root/connected_components.h",
		"/Users/lg/code/devstar/src/getBlobs.cpp",
		"/Users/lg/code/devstar/root/image.h",
		"/Users/lg/code/devstar/root/point.h",
		"/Users/lg/code/devstar/root/point.cpp",
		"/Users/lg/code/devstar/root/constant.h",
		"/Users/lg/code/devstar/root/interface.h",
		"/Users/lg/code/devstar/root/skeleton.cpp",
		"/Users/lg/code/devstar/root/skeleton.h",
		"/Users/lg/code/devstar/root/context.h",
		"/Users/lg/code/devstar/root/well.cpp",
		"/Users/lg/code/devstar/root/well.h",
		"/Users/lg/code/devstar/root/classify.h",
		"/Users/lg/code/devstar/root/url.h",
		"/Users/lg/code/devstar/root/pipeline.h",
		"/Users/lg/code/devstar/root/context.cpp",
		"/Users/lg/code/devstar/root/environment.h",
		"/Users/lg/code/devstar/root/parse.h",
		"/Users/lg/code/devstar/src/skeleton.h",
		"/Users/lg/code/devstar/src/skeleton.cpp",
		"/Users/lg/Desktop/connected_components.h",
		"/Users/lg/code/devstar/root/contrib/cimg/CImg.h",
		"/Users/lg/code/devstar/root/Makefile",
		"/Users/lg/code/devstar/root/model.h",
		"/Users/lg/code/devstar/root/model.cpp",
		"/Users/lg/code/devstar/src/giaWork.h",
		"/Users/lg/code/devstar/src/gia.cpp",
		"/Users/lg/code/devstar/src/giaOutput.cpp",
		"/Users/lg/code/devstar/src/Bitmap.cpp",
		"/Users/lg/code/devstar/src/giaWork.cpp",
		"/Users/lg/code/devstar/root/classify.cpp",
		"/Users/lg/code/devstar/root/example/default.json",
		"/Users/lg/code/devstar/root/pipeline.cpp",
		"/Users/lg/code/devstar/root/environment.cpp",
		"/Users/lg/code/devstar/root/constant.cpp",
		"/Users/lg/code/devstar/src/getSkeleton.cpp",
		"/Users/lg/code/devstar/src/FindBackground.cpp",
		"/Users/lg/code/devstar/src/transvec.cpp",
		"/Users/lg/code/devstar/src/DPTreeMS.cpp",
		"/Users/lg/code/devstar/src/Point.h",
		"/Users/lg/code/devstar/root/erodedilate.h",
		"/Users/lg/code/devstar/root/devstar.cpp",
		"/Users/lg/code/devstar/src/getSeg.cpp",
		"/Users/lg/code/devstar/src/contrib/cimg/CImg.h",
		"/Users/lg/code/devstar/src/STreeDraw.cpp",
		"/Users/lg/code/devstar/root/error.h",
		"/Users/lg/code/devstar/root/bitmap.h",
		"/Users/lg/code/devstar/root/bitmap.cpp",
		"/Users/lg/code/devstar/src/Makefile.in",
		"/Users/lg/code/devstar/src/Makefile.am",
		"/Users/lg/code/devstar/src/Makefile",
		"/Users/lg/code/devstar/src/ConvexHull.h",
		"/Users/lg/code/devstar/src/getBac1.cpp",
		"/Users/lg/code/devstar/root/contrib/libsvm/svm.cpp",
		"/Users/lg/code/devstar/root/contrib/maxflow/graph.h",
		"/Users/lg/code/devstar/src/STreeColor.cpp",
		"/Users/lg/code/devstar/src/pavlidis.cpp",
		"/Users/lg/code/devstar/root/pavlidis.cpp",
		"/Users/lg/code/devstar/root/pavlidis.h",
		"/Users/lg/code/devstar/src/pavlidis.h",
		"/Users/lg/Downloads/spf_fo_p33_vh.csv",
		"/Users/lg/Downloads/spf_preb_p33_vh.csv",
		"/Users/lg/code/devstar/src/gia.h",
		"/Users/lg/code/devstar/src/giaConfig.cpp",
		"/Users/lg/code/devstar/src/contrib/libsvm/svm.h",
		"/Users/lg/code/devstar/root/contrib/libsvm/svm.h",
		"/Users/lg/code/devstar/root/multiscale.h",
		"/Users/lg/code/devstar/root/multiscale.cpp",
		"/Users/lg/code/devstar/src/STreeAdd.cpp",
		"/Users/lg/code/devstar/src/STreeFeatures.cpp",
		"/Users/lg/code/devstar/src/STreeLabel.cpp",
		"/Users/lg/code/devstar/src/DPTreeMS.h",
		"/Users/lg/code/devstar/src/largeobjects.cpp",
		"/Users/lg/code/devstar/src/ConnectedComponents.h",
		"/Users/lg/code/devstar/src/Image.h",
		"/Users/lg/Downloads/dhm/test.json",
		"/Users/lg/code/pheniqs/pipeline.cpp",
		"/Users/lg/code/pheniqs/pipeline.h",
		"/Users/lg/code/pheniqs/pheniqs.cpp"
	],
	"find":
	{
		"height": 25.0
	},
	"find_in_files":
	{
		"height": 106.0,
		"where_history":
		[
			"/Users/lg/code/devstar,-legacy/*,-contrib/*",
			"/Users/lg/code/devstar,-legacy/*",
			"/Users/lg/code/devstar,-legacy/*,-contrib/*",
			"/Users/lg/code/devstar,-legacy/*",
			"/Users/lg/code/devstar",
			"/Users/lg/code/tubo",
			"/Users/lg/code/devstar,-*.Po,-contrib/*,-legacy/*",
			"<current file>",
			"/Users/lg/code/devstar,-*.Po,-contrib/*,-legacy/*",
			"<current file>",
			"/Users/lg/code/devstar,-*.Po,-contrib/*,-legacy/*",
			"/Users/lg/code/devstar,-*.Po,-contrib/*",
			"/Users/lg/code/devstar/root,-*.Po,-contrib/*",
			"/Users/lg/code/pheniqs",
			"/Users/lg/code/devstar/root,-*.Po,-contrib/*",
			"/Users/lg/code/devstar/src,-*.Po,-Makefile*",
			"/Users/lg/code/devstar/root,-*.Po,-contrib/*",
			"/Users/lg/code/devstar/root,-*.Po",
			"/Users/lg/code/devstar/root,-*.Po,-contrib/*",
			"/Users/lg/code/devstar/root,-*.Po",
			"/Users/lg/code/devstar/root,-*.Po,-contrib/*",
			"/Users/lg/code/devstar/src,-*.Po,-Makefile*",
			"/Users/lg/code/devstar/root,-*.Po,-contrib/*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*,-contrib/*",
			"/Users/lg/code/devstar/src,-*.Po,-Makefile*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*,-contrib/*",
			"/Users/lg/code/devstar/src,-*.Po,-Makefile*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*,-contrib/*",
			"/Users/lg/code/devstar/src,-*.Po,-Makefile*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*,-contrib/*",
			"/Users/lg/code/devstar/src,-*.Po,-Makefile*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*,-contrib/*",
			"/Users/lg/code/devstar/src,-*.Po,-Makefile*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*,-contrib/*",
			"/Users/lg/code/devstar/src,-*.Po,-Makefile*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*,-contrib/*,-bitmap.cpp,-bitmap.h",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*,-contrib/*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*,-contrib/",
			"/Users/lg/code/devstar/src,-*.Po,-Makefile*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*,-contrib/*",
			"/Users/lg/code/devstar/root/well.h,/Users/lg/code/devstar/root/well.cpp",
			"/Users/lg/code/devstar/root/well.h, well.cpp",
			"/Users/lg/code/devstar/root/well",
			"/Users/lg/code/devstar/root/well\\.*",
			"/Users/lg/code/devstar/root/well.*",
			"/Users/lg/code/devstar/root/well.h",
			"/Users/lg/code/devstar/root/well*",
			"/Users/lg/code/devstar/root/well.*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*,-contrib/*",
			"/Users/lg/code/devstar/src,-*.Po,-Makefile*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*,-contrib/*",
			"/Users/lg/code/devstar/src,-*.Po,-Makefile*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*,-contrib/*",
			"/Users/lg/code/devstar/src,-*.Po,-Makefile*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*,-contrib/*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*,-contrib/*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*,-contrib/*,-pavlidis*",
			"/Users/lg/code/devstar/src,-*.Po,-Makefile*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*,-contrib/*,-pavlidis*",
			"/Users/lg/code/devstar/src,-*.Po,-Makefile*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*,-contrib/*,-pavlidis*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*,-contrib/*",
			"/Users/lg/code/devstar/src,-*.Po,-Makefile*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*,-contrib/*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*",
			"/Users/lg/code/devstar/src,-*.Po,-Makefile*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*",
			"/Users/lg/code/devstar/src,-*.Po,-Makefile*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*",
			"/Users/lg/code/devstar/src,-*.Po,-Makefile*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*",
			"/Users/lg/code/devstar/src,-*.Po,-Makefile*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*",
			"/Users/lg/code/devstar/src,-*.Po,-Makefile*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*,-contrib/*",
			"/Users/lg/code/devstar/src,-*.Po,-Makefile*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*,-contrib/*",
			"/Users/lg/code/devstar/src,-*.Po,-Makefile*",
			"/Users/lg/code/devstar/src,-*.Po,-Makefile*,-contrib/*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*,-contrib/*",
			"/Users/lg/code/devstar/src,-*.Po,-Makefile*,-contrib/*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*,-contrib/*",
			"/Users/lg/code/devstar/src,-*.Po,-Makefile*,-contrib/*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*,-contrib/*",
			"/Users/lg/code/devstar/src,-*.Po,-Makefile*,-contrib/*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*,-contrib/*",
			"/Users/lg/code/devstar/src,-*.Po,-Makefile*,-contrib/*",
			"/Users/lg/code/devstar/root,-*.Po,-Makefile*,-contrib/*",
			"/Users/lg/code/devstar/ROOT,-*.Po,-Makefile*,-contrib/*",
			"/Users/lg/code/devstar/src,-*.Po,-Makefile*,-contrib/*",
			"/Users/lg/code/devstar/ROOT,-*.Po,-Makefile*,-contrib/*",
			"/Users/lg/code/devstar/src,-*.Po,-Makefile*,-contrib/*",
			"/Users/lg/code/devstar/src,-*.Po,-Makefile*",
			"/Users/lg/code/pheniqs",
			"/Users/lg/code/pheniqs/docs",
			"/Users/lg/code/pheniqs",
			"/Users/lg/code/devstar/src,-*.Po,-Makefile*",
			"/Users/lg/code/devstar/src,-*.Po,-Makefile",
			"/Users/lg/code/devstar/src,-*.Po",
			"/Users/lg/code/devstar,-*.Po",
			"/Users/lg/code/devstar",
			"/Users/lg/code/devstar/root,-*.Po",
			"/Users/lg/code/devstar",
			"/Users/lg/code/devstar/root,-*.Po",
			"/Users/lg/code/devstar",
			"/Users/lg/code/devstar/root,-*.Po",
			"/Users/lg/code/devstar",
			"/Users/lg/code/devstar/src,-*.Po,-contrib/*",
			"/Users/lg/code/devstar/root,-*.Po",
			"/Users/lg/code/devstar/root,-*.Po,-contrib/*",
			"/Users/lg/code/devstar/src,-*.Po,-contrib/*",
			"/Users/lg/code/pheniqs,-*.Po,-*.r,-*.py,-*.json,-contrib/*,-*.md,-*.sh,-*.html,-.gitmodules,-references.bib,-manuscript/*",
			"/Users/lg/code/devstar/root,-*.Po,-contrib/*",
			"/Users/lg/code/devstar/src,-*.Po,-contrib/*",
			"<current file>",
			"/Users/lg/code/devstar/src,-*.Po,-contrib/*",
			"<current file>",
			"/Users/lg/code/devstar/src,-*.Po,-contrib/*",
			"/Users/lg/code/devstar/src,-*.Po,-contrib",
			"/Users/lg/code/devstar/src,-*.Po",
			"/Users/lg/code/devstar/src",
			"/Users/lg/code/devstar",
			"<current file>",
			"/Users/lg/code/pheniqs",
			"/Users/lg/code/pheniqs,-*.Po,-*.r,-*.py,-*.json,-contrib/*,-*.md,-*.sh,-*.html,-.gitmodules,-references.bib,-manuscript/*"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"thread",
			"background_distance_threshold",
			"background distance threshold",
			"skeleton_perimeter_threshold",
			"c0",
			"\\bPerimeter\\(",
			"\\bPerimeter\\b",
			"components",
			"get_component_by_id",
			"add_bifurcation",
			"    ],[",
			"triangle",
			"]\\n",
			"HERE",
			"cout",
			"triangle",
			"\n                ",
			"cross",
			"\\bmp2\\b",
			"Perimeter",
			"distance_squared",
			"\\bdistance\\(",
			"\\bdistance\\b",
			"\\belemAfter\\b",
			"\\bafter\\b",
			"\\bminnode0\\b",
			"\\bminnode\\b",
			"\\bnit\\b",
			"\\bnit0\\b",
			"\\bit\\b",
			"mpy",
			"\\btempdist\\b",
			"\\bdistance\\b",
			"\\bmindist\\b",
			"\\b",
			"trace",
			"perimeter_trace",
			"MUST",
			"\\blarvae_classifier_score\\b",
			"\\begg_clump_classifier_score\\b",
			"\\bworm_classifier_score\\b",
			"\\bWORM_EGG_NEW\\b",
			"\\bEGG_LARVAE_NEW\\b",
			"\\bLARVAE_WORM_NEW\\b",
			"\\nLARVAE_WORM_NEW\\n",
			"\\bLARVAE_WORM\\b",
			"\\bWORM_EGG\\b",
			"\\bEGG_LARVAE\\b",
			"Shape\\(",
			"worm_egg_classifier",
			"WORM_EGG",
			"egg_clump_classifier_score",
			"maxflow_egg_larvae_label",
			"worm_classifier_score",
			"maxflow_worm_egg_label",
			"WORM_EGG",
			"\\begg_larvae_classifier_score\\b",
			"\\blarvae_worm_classifier_score\\b",
			"\\bworm_egg_classifier_score\\b",
			"larvae_egg",
			"larvae_worm_classifier_score",
			"skeleton_perimeter_threshold",
			"WL",
			"PartClassification",
			"classification",
			"skeleton_coordinates",
			"\\bskeleton\\b",
			"\\btree\\b",
			"\\bskeleton\\b",
			"LARVAE_WORM",
			"WORM_EGG",
			"PartClassification",
			"ClassifierType",
			"cerr",
			"cout",
			"[^0 \\n]",
			"cout",
			"operator\\(",
			"PartGeometry",
			"cout",
			"[^0 \\n]",
			"[^0 ]",
			"cout",
			"really_big_perimeter",
			"limit",
			"jump_cost",
			"number_of_object_parts",
			"total_object_parts_area",
			"add_edge",
			"(cap >= 0)",
			"\"Component",
			"FIRST_QUANTIZER",
			"find_background",
			"load_background_image",
			"load background image",
			"cross",
			"\\.pixelT",
			"new Perimeter",
			"Perimeter",
			"\\.pixelT",
			"->pixelT",
			"\\.pixelT",
			"->s\\b",
			"\\.s\\b",
			"MatchNode",
			"load_silhouette",
			"add_bifurcation",
			"add_maxflow_nodes",
			"execute_maxflow",
			"perimeter_trace\\[([^]]+)\\]",
			"perimeter_trace\\[",
			"perimeter_trace[",
			"\\bperimeter_nodes\\b",
			"perimeter_trace",
			"\\bperimeter_nodes\\b",
			"process_queue",
			"trace_perimeter",
			"pixel.",
			"pixel->",
			"limit",
			"add_part",
			"\\bGSaprime\\b",
			"\\bGS_a\\b",
			"\\bGSaprime\\b",
			"\\bGSiprime\\b",
			"\\bGS_i\\b",
			"\\bGSiprime\\b",
			"\\bGJ_i_prime_left\\b"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"],[",
			"],\\n",
			"],[",
			"after",
			"shortest_right",
			"shortest_left",
			"left",
			"right",
			"distance",
			"shortest_distance",
			"egg_larvae_classifier_score",
			"worm_egg_classifier_score",
			"larvae_worm_classifier_score",
			"WORM_EGG",
			"EGG_LARVAE",
			"LARVAE_WORM",
			"EGG_LARVAE_NEW",
			"LARVAE_WORM_NEW",
			"WORM_EGG_NEW",
			"larvae_classifier_score",
			"worm_classifier_score",
			"egg_clump_classifier_score",
			"perimeter_node_by_index($1)",
			"perimeter_trace",
			"GS_a",
			"GS_i",
			"GJ_i_left",
			"GJ_a_left",
			"GJ_i_right",
			"GJ_a_right",
			"GJ_a_prime_right",
			"GJ_i_prime_right",
			"GJ_a_prime_left",
			"GJ_i_prime_left",
			"EGG_LARVAE",
			"LARVAE_WORM",
			"Shape",
			"add_part",
			"add_bifurcation",
			"maxflow_classification",
			"egg_larvae",
			"larvae_worm",
			"maxflow_larvae_egg_label",
			"maxflow_worm_larvae_label",
			"maxflow_worm_egg_label",
			"larvae_egg_classifier_score",
			"worm_larvae_classifier_score",
			"worm_egg_classifier_score",
			"Node",
			"Vertex",
			"component",
			"",
			"hole",
			"current",
			"chessboard_distance",
			"423a7a6b752d4780f7f61722443ed5f4f50e3bda",
			"Canvas< double >",
			"Canvas< int >",
			"Canvas< uint8_t >",
			"neighbour_y",
			"neighbour_x",
			"423a7a6b752d4780f7f61722443ed5f4f50e3bda",
			"max",
			"min",
			"using std::numeric_limits",
			"using std::numeric_limits;",
			"numeric_limits",
			"abs",
			"perimeter",
			"label_nodes",
			"context\\.",
			"DEVSTAR_CONTEXT_H",
			"context.h",
			"model",
			"context.h",
			"DEVSTAR_CONTEXT_H",
			"label_nodes",
			"perimeter",
			"label_map",
			"draw",
			"reduce_dynamic_range",
			"is_empty_grid_column",
			"is_empty_grid_row",
			"last_grid_row[$1]",
			"first_grid_row[$1]",
			"last_grid_column[$1]",
			"first_grid_column[$1]",
			"grid_column_count",
			"grid_row_count",
			"well_grid_resolution",
			"y_intercept",
			"previous_quantizer",
			"CanvasDouble",
			"CanvasUint8",
			"CanvasInt32",
			"Canvas32bit",
			"well_grid_resolution",
			"DEVSTAR_WELL_H",
			",",
			"",
			"image_size.y",
			"image_size.x",
			"image",
			"well_grid_resolution",
			"well_center_x_max",
			"well_center_increment",
			"$1($1),",
			"object_id",
			"small_connected_components",
			"large_connected_components",
			"ConnectedComponentPixel",
			"small_connected_components_map",
			"large_connected_components_map",
			"maxflow_graph",
			"MaxFlowGraph",
			"maxflow_larva_label",
			"maxflow_worm_label",
			"maxflow_egg_clump_label",
			"perimeter_nodes",
			"$1origin",
			"origin",
			"component_canvas",
			"canvas",
			"pavlidis_canvas",
			"canvas",
			"skeleton.perimeter_node_by_index($1).pixelT;",
			"skeleton.perimeter_node_by_index($1).pixel;",
			"perimeter_node_by_index"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 98.0
	},
	"output.unsaved_changes":
	{
		"height": 98.0
	},
	"pinned_build_system": "",
	"project": "somatic.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"tool/populate.sh"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 207.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
